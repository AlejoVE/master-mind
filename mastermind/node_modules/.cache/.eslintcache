[{"C:\\Users\\alina\\Documents\\HYF-Typescript\\master-mind\\mastermind\\src\\index.tsx":"1","C:\\Users\\alina\\Documents\\HYF-Typescript\\master-mind\\mastermind\\src\\App.tsx":"2","C:\\Users\\alina\\Documents\\HYF-Typescript\\master-mind\\mastermind\\src\\router\\AppRouter.tsx":"3","C:\\Users\\alina\\Documents\\HYF-Typescript\\master-mind\\mastermind\\src\\components\\StartPage.tsx":"4","C:\\Users\\alina\\Documents\\HYF-Typescript\\master-mind\\mastermind\\src\\components\\GamePage.tsx":"5","C:\\Users\\alina\\Documents\\HYF-Typescript\\master-mind\\mastermind\\src\\context\\GameProvider.tsx":"6","C:\\Users\\alina\\Documents\\HYF-Typescript\\master-mind\\mastermind\\src\\components\\AvailableColors.tsx":"7","C:\\Users\\alina\\Documents\\HYF-Typescript\\master-mind\\mastermind\\src\\components\\Row.tsx":"8","C:\\Users\\alina\\Documents\\HYF-Typescript\\master-mind\\mastermind\\src\\context\\gameContext.tsx":"9","C:\\Users\\alina\\Documents\\HYF-Typescript\\master-mind\\mastermind\\src\\components\\Circle.tsx":"10"},{"size":341,"mtime":1667762878083,"results":"11","hashOfConfig":"12"},{"size":142,"mtime":1667762878078,"results":"13","hashOfConfig":"12"},{"size":519,"mtime":1667762878084,"results":"14","hashOfConfig":"12"},{"size":125,"mtime":1667762878081,"results":"15","hashOfConfig":"12"},{"size":600,"mtime":1667762878080,"results":"16","hashOfConfig":"12"},{"size":678,"mtime":1667762878082,"results":"17","hashOfConfig":"12"},{"size":756,"mtime":1667762878079,"results":"18","hashOfConfig":"12"},{"size":1213,"mtime":1667762878081,"results":"19","hashOfConfig":"12"},{"size":240,"mtime":1667762878083,"results":"20","hashOfConfig":"12"},{"size":572,"mtime":1667762878079,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13ml5j",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},"C:\\Users\\alina\\Documents\\HYF-Typescript\\master-mind\\mastermind\\src\\index.tsx",[],[],"C:\\Users\\alina\\Documents\\HYF-Typescript\\master-mind\\mastermind\\src\\App.tsx",[],[],"C:\\Users\\alina\\Documents\\HYF-Typescript\\master-mind\\mastermind\\src\\router\\AppRouter.tsx",[],[],"C:\\Users\\alina\\Documents\\HYF-Typescript\\master-mind\\mastermind\\src\\components\\StartPage.tsx",[],[],"C:\\Users\\alina\\Documents\\HYF-Typescript\\master-mind\\mastermind\\src\\components\\GamePage.tsx",["56","57","58","59"],[],"import React, { useState } from \"react\";\r\nimport AvailableColors from \"./AvailableColors\";\r\nimport Circle from \"./Circle\";\r\nimport Row from \"./Row\";\r\n\r\nenum Colors {\r\n  BLUE = \"blue\",\r\n  RED = \"red\",\r\n  GREEN = \"green\",\r\n  BLACK = \"black\"\r\n}\r\n\r\nfunction GamePage() {\r\n  const colors = Object.values(Colors);\r\n  const [currentColor, setCurrentColor] = useState<string>(\"\");\r\n  return (\r\n    <div className=\"page-content\">\r\n      {/* Size in rem */}\r\n      <Row />\r\n      <Row />\r\n      <Row />\r\n      <Row />\r\n      <Row />\r\n      <AvailableColors />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GamePage;\r\n","C:\\Users\\alina\\Documents\\HYF-Typescript\\master-mind\\mastermind\\src\\context\\GameProvider.tsx",["60"],[],"import {FC, useState} from 'react'\r\nimport { GameContext } from './gameContext'\r\n\r\ninterface Props {\r\n    children: JSX.Element\r\n}\r\n\r\n\r\n\r\n const  GameProvider: FC<Props> = ({children}: Props) => {\r\n    const [currentColor, setCurrentColor] = useState<string>('')\r\n    const handleClick = (e: React.MouseEvent<HTMLButtonElement>)=> {\r\n        const color: string = (e.target as HTMLButtonElement).getAttribute('data-color') as string\r\n        setCurrentColor(color)\r\n        console.log({currentColor})\r\n    }\r\n  return (\r\n    <GameContext.Provider value={{currentColor, setCurrentColor}}>\r\n        {children}\r\n    </GameContext.Provider>\r\n  )\r\n}\r\n\r\nexport default GameProvider\r\n","C:\\Users\\alina\\Documents\\HYF-Typescript\\master-mind\\mastermind\\src\\components\\AvailableColors.tsx",[],[],"C:\\Users\\alina\\Documents\\HYF-Typescript\\master-mind\\mastermind\\src\\components\\Row.tsx",["61","62","63"],[],"import React, { useContext } from 'react'\r\nimport Circle from './Circle'\r\nimport { GameContext } from '../context/gameContext';\r\n\r\ntype RowProps = {\r\n    circle?: number\r\n}\r\n\r\nfunction Row(props: RowProps) {\r\n\r\n    const context = useContext(GameContext)\r\n    const currentColor = context?.currentColor\r\n    const style = {\r\n     backgroundColor: `${currentColor ? currentColor : '#53483F'}`\r\n    }\r\n    const handleClick = (e: React.MouseEvent<HTMLButtonElement>)=>{\r\n     const color: string = (e.target as HTMLButtonElement).getAttribute('data-color') as string;\r\n \r\n     if(context?.currentColor === '') {\r\n \r\n     }\r\n    }\r\n  return (\r\n    <div className='row-main'>\r\n        <div className='row-main-container'>\r\n            <div className='row-circles-container' >\r\n                <Circle size='3' />\r\n                <Circle size='3' />\r\n                <Circle size='3' />\r\n                <Circle size='3' />\r\n            </div>\r\n            <div className='row-grid'>\r\n                <Circle size='1.2' />\r\n                <Circle size='1.2' />\r\n                <Circle size='1.2' />\r\n                <Circle size='1.2' />\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Row","C:\\Users\\alina\\Documents\\HYF-Typescript\\master-mind\\mastermind\\src\\context\\gameContext.tsx",[],[],"C:\\Users\\alina\\Documents\\HYF-Typescript\\master-mind\\mastermind\\src\\components\\Circle.tsx",["64","65"],[],"import React, { useContext } from \"react\";\r\nimport { GameContext } from \"../context/gameContext\";\r\n\r\ntype ButtonProps = {\r\n  size: string;\r\n  color?: string;\r\n};\r\n\r\nfunction Circle(props: ButtonProps) {\r\n  return (\r\n    <button\r\n      className=\"button\"\r\n      data-color={props.color}\r\n      style={{\r\n        backgroundColor: `${props.color || \"#53483F\"}`,\r\n        width: `${props.size}rem`,\r\n        minWidth: `${props.size}rem`,\r\n        height: `${props.size}rem`,\r\n        minHeight: `${props.size}rem`\r\n      }}\r\n    ></button>\r\n  );\r\n}\r\n\r\nexport default Circle;\r\n",{"ruleId":"66","severity":1,"message":"67","line":3,"column":8,"nodeType":"68","messageId":"69","endLine":3,"endColumn":14},{"ruleId":"66","severity":1,"message":"70","line":14,"column":9,"nodeType":"68","messageId":"69","endLine":14,"endColumn":15},{"ruleId":"66","severity":1,"message":"71","line":15,"column":10,"nodeType":"68","messageId":"69","endLine":15,"endColumn":22},{"ruleId":"66","severity":1,"message":"72","line":15,"column":24,"nodeType":"68","messageId":"69","endLine":15,"endColumn":39},{"ruleId":"66","severity":1,"message":"73","line":12,"column":11,"nodeType":"68","messageId":"69","endLine":12,"endColumn":22},{"ruleId":"66","severity":1,"message":"74","line":13,"column":11,"nodeType":"68","messageId":"69","endLine":13,"endColumn":16},{"ruleId":"66","severity":1,"message":"73","line":16,"column":11,"nodeType":"68","messageId":"69","endLine":16,"endColumn":22},{"ruleId":"66","severity":1,"message":"75","line":17,"column":12,"nodeType":"68","messageId":"69","endLine":17,"endColumn":25},{"ruleId":"66","severity":1,"message":"76","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":27},{"ruleId":"66","severity":1,"message":"77","line":2,"column":10,"nodeType":"68","messageId":"69","endLine":2,"endColumn":21},"@typescript-eslint/no-unused-vars","'Circle' is defined but never used.","Identifier","unusedVar","'colors' is assigned a value but never used.","'currentColor' is assigned a value but never used.","'setCurrentColor' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'style' is assigned a value but never used.","'color' is assigned a value but never used.","'useContext' is defined but never used.","'GameContext' is defined but never used."]